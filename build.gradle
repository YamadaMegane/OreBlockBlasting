plugins {
  id 'eclipse'
  id 'idea'
  id 'maven-publish'
  id 'net.minecraftforge.gradle' version '[6.0,6.2)'
  id 'org.spongepowered.mixin' version '0.7.+'
}

version = mod_version
group = mod_group_id

base {
  archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
  mappings channel: mapping_channel, version: mapping_version

  copyIdeResources = true

  runs {
    // applies to all the run configs below
    configureEach {
      workingDirectory project.file('run')

      property 'forge.logging.markers', 'REGISTRIES'

      property 'forge.logging.console.level', 'debug'

      mods {
        "${mod_id}" {
          source sourceSets.main
        }
      }
    }

    client {
      property 'forge.enabledGameTestNamespaces', mod_id
    }

    server {
      property 'forge.enabledGameTestNamespaces', mod_id
      args '--nogui'
    }

    gameTestServer {
      property 'forge.enabledGameTestNamespaces', mod_id
    }

    data {
      workingDirectory project.file('run-data')

      args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
    }
  }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
  maven { url "https://www.cursemaven.com" }
}

dependencies {
  minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

  annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
  
  implementation fg.deobf("curse.maven:jei-238222:5101366")
  implementation fg.deobf("curse.maven:jei-integration-265917:4999754")
  implementation fg.deobf("curse.maven:just-enough-archaeology-890755:5324518")
  implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:5057220")
  
  //Ad Astra
  implementation fg.deobf("curse.maven:ad-astra-635042:5116766")
  implementation fg.deobf("curse.maven:resourceful-lib-570073:5659871")
  implementation fg.deobf("curse.maven:resourceful-config-714059:5020441")
  implementation fg.deobf("curse.maven:botarium-704113:5486070")
  
  implementation fg.deobf("curse.maven:official-divinerpg-363543:5049334")
  
  implementation fg.deobf("curse.maven:ice-and-fire-dragons-264231:5633453")
  implementation fg.deobf("curse.maven:citadel-331936:5633260")
}



tasks.named('processResources', ProcessResources).configure {
  var replaceProperties = [
    minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
    forge_version: forge_version, forge_version_range: forge_version_range,
    loader_version_range: loader_version_range,
    mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
    mod_authors: mod_authors, mod_description: mod_description,
  ]
  inputs.properties replaceProperties

  filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
    expand replaceProperties + [project: project]
  }
}

tasks.named('jar', Jar).configure {
  manifest {
    attributes([
      'Specification-Title'   : mod_id,
      'Specification-Vendor'  : mod_authors,
      'Specification-Version'   : '1', // We are version 1 of ourselves
      'Implementation-Title'  : project.name,
      'Implementation-Version'  : project.jar.archiveVersion,
      'Implementation-Vendor'   : mod_authors,
      'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
  }

  finalizedBy 'reobfJar'
}

publishing {
  publications {
    register('mavenJava', MavenPublication) {
      artifact jar
    }
  }
  repositories {
    maven {
      url "file://${project.projectDir}/mcmodsrepo"
    }
  }
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
